# =============================================================================
# EPSILORA AI - Environment Variables Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit the .env file to version control

# =============================================================================
# API KEYS
# =============================================================================

# Google Gemini AI API Key (REQUIRED)
# Get your API key from: https://makersuite.google.com/app/apikey
# Used for AI chat, quiz generation, and recommendations
VITE_GEMINI_API_KEY=your_gemini_api_key_here

# Alternative Gemini API key for backend (if different from VITE version)
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB Connection URI (REQUIRED)
# Format: mongodb+srv://username:password@cluster.mongodb.net/database?options
# Example: mongodb+srv://user:pass@cluster.abc123.mongodb.net/epsilora?retryWrites=true&w=majority
MONGODB_URI=mongodb://localhost:27017/epsilora

# Alternative individual database configuration (if not using URI)
DB_HOST=localhost
DB_PORT=27017
DB_NAME=epsilora
DB_USER=your_db_username
DB_PASSWORD=your_db_password

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server Port (default: 3001)
PORT=3001

# Node Environment (development, production, test, staging)
NODE_ENV=development

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# JWT Secret Key (REQUIRED for production)
# Generate a secure random string for production
# You can use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT Token Expiration (default: 7d)
JWT_EXPIRES_IN=7d

# =============================================================================
# API ENDPOINTS
# =============================================================================

# Backend API Base URL for frontend (REQUIRED for frontend)
# Development: http://localhost:3001
# Production: https://your-backend-domain.com
VITE_API_URL=http://localhost:3001

# Alternative API base URL configuration
API_BASE_URL=http://localhost:3001

# =============================================================================
# OPTIONAL CONFIGURATIONS
# =============================================================================

# Enable debug mode (true/false)
DEBUG=false

# Maximum file upload size (in MB)
MAX_FILE_SIZE=10

# Rate limiting configuration
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW_MS=900000

# Session configuration
SESSION_SECRET=your-session-secret-key
SESSION_MAX_AGE=86400000

# Email configuration (if email features are implemented)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-app-password

# =============================================================================
# DEPLOYMENT SPECIFIC
# =============================================================================

# Vercel specific (if deploying to Vercel)
VERCEL_ENV=development

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# =============================================================================
# NOTES
# =============================================================================
# 1. Never commit your .env file to version control
# 2. Use strong, unique values for JWT_SECRET in production
# 3. Ensure MONGODB_URI includes proper authentication for production
# 4. VITE_ prefixed variables are exposed to the frontend
# 5. Keep your API keys secure and rotate them regularly 